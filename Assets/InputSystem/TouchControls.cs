//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/InputSystem/TouchControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @TouchControls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @TouchControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""TouchControls"",
    ""maps"": [
        {
            ""name"": ""Touch"",
            ""id"": ""b14bd74d-6e33-480a-8a4a-9eb1e61e5b18"",
            ""actions"": [
                {
                    ""name"": ""TouchInput"",
                    ""type"": ""PassThrough"",
                    ""id"": ""502c11db-b19a-4477-90ba-b379675afd44"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TouchPress"",
                    ""type"": ""Button"",
                    ""id"": ""f63299f2-61ad-4a46-84fb-72d59c21b56d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TouchDelta"",
                    ""type"": ""Value"",
                    ""id"": ""ae238a44-32a8-4898-a1a7-e1ca304627db"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""TouchPosition"",
                    ""type"": ""Value"",
                    ""id"": ""b5c51833-a00b-46cc-a09c-0800d25bf61c"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
<<<<<<< Updated upstream
=======
<<<<<<< HEAD
>>>>>>> Stashed changes
                    ""name"": ""SecondTouchPress"",
                    ""type"": ""Button"",
                    ""id"": ""9c71d4c8-8013-4c62-8c9d-947331bd75b1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SecondTouchPosition"",
                    ""type"": ""Value"",
                    ""id"": ""a9376b81-ea44-4903-9d20-21aa80456989"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
<<<<<<< Updated upstream
=======
=======
                    ""name"": ""TouchHold"",
                    ""type"": ""Button"",
                    ""id"": ""02c53c51-f96e-46e2-a902-ab3d61d6f14f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": false
>>>>>>> fa4041157eea150cbc489a2dc63667e7be1886e9
>>>>>>> Stashed changes
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""2a04716f-ba9b-4c3d-b89b-9ef670a20397"",
                    ""path"": ""<Touchscreen>/primaryTouch"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TouchInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2b734594-190b-4b9b-a33b-b8263455cd54"",
                    ""path"": ""<Touchscreen>/primaryTouch/tap"",
                    ""interactions"": ""Press,Hold"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TouchPress"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""afd3f004-a746-440c-a83b-dd375b71e72f"",
                    ""path"": ""<Touchscreen>/primaryTouch/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TouchPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
<<<<<<< Updated upstream
=======
<<<<<<< HEAD
>>>>>>> Stashed changes
                    ""id"": ""5b829713-9c18-4c9c-a856-3f8b42331e38"",
                    ""path"": ""<Touchscreen>/touch1/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SecondTouchPress"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b625df25-bb61-4832-bc39-fa555436041c"",
                    ""path"": ""<Touchscreen>/touch1/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SecondTouchPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fea311c2-9874-4df8-b011-442f52f30068"",
                    ""path"": ""<Touchscreen>/primaryTouch/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TouchDelta"",
<<<<<<< Updated upstream
=======
=======
                    ""id"": ""94b3b67b-636d-4e0f-9a46-583e6a64ceaf"",
                    ""path"": ""<Touchscreen>/primaryTouch/tap"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TouchHold"",
>>>>>>> fa4041157eea150cbc489a2dc63667e7be1886e9
>>>>>>> Stashed changes
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Touch
        m_Touch = asset.FindActionMap("Touch", throwIfNotFound: true);
        m_Touch_TouchInput = m_Touch.FindAction("TouchInput", throwIfNotFound: true);
        m_Touch_TouchPress = m_Touch.FindAction("TouchPress", throwIfNotFound: true);
        m_Touch_TouchDelta = m_Touch.FindAction("TouchDelta", throwIfNotFound: true);
        m_Touch_TouchPosition = m_Touch.FindAction("TouchPosition", throwIfNotFound: true);
<<<<<<< Updated upstream
        m_Touch_SecondTouchPress = m_Touch.FindAction("SecondTouchPress", throwIfNotFound: true);
        m_Touch_SecondTouchPosition = m_Touch.FindAction("SecondTouchPosition", throwIfNotFound: true);
=======
<<<<<<< HEAD
        m_Touch_SecondTouchPress = m_Touch.FindAction("SecondTouchPress", throwIfNotFound: true);
        m_Touch_SecondTouchPosition = m_Touch.FindAction("SecondTouchPosition", throwIfNotFound: true);
=======
        m_Touch_TouchHold = m_Touch.FindAction("TouchHold", throwIfNotFound: true);
>>>>>>> fa4041157eea150cbc489a2dc63667e7be1886e9
>>>>>>> Stashed changes
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Touch
    private readonly InputActionMap m_Touch;
    private List<ITouchActions> m_TouchActionsCallbackInterfaces = new List<ITouchActions>();
    private readonly InputAction m_Touch_TouchInput;
    private readonly InputAction m_Touch_TouchPress;
    private readonly InputAction m_Touch_TouchDelta;
    private readonly InputAction m_Touch_TouchPosition;
<<<<<<< Updated upstream
    private readonly InputAction m_Touch_SecondTouchPress;
    private readonly InputAction m_Touch_SecondTouchPosition;
=======
<<<<<<< HEAD
    private readonly InputAction m_Touch_SecondTouchPress;
    private readonly InputAction m_Touch_SecondTouchPosition;
=======
    private readonly InputAction m_Touch_TouchHold;
>>>>>>> fa4041157eea150cbc489a2dc63667e7be1886e9
>>>>>>> Stashed changes
    public struct TouchActions
    {
        private @TouchControls m_Wrapper;
        public TouchActions(@TouchControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @TouchInput => m_Wrapper.m_Touch_TouchInput;
        public InputAction @TouchPress => m_Wrapper.m_Touch_TouchPress;
        public InputAction @TouchDelta => m_Wrapper.m_Touch_TouchDelta;
        public InputAction @TouchPosition => m_Wrapper.m_Touch_TouchPosition;
<<<<<<< Updated upstream
        public InputAction @SecondTouchPress => m_Wrapper.m_Touch_SecondTouchPress;
        public InputAction @SecondTouchPosition => m_Wrapper.m_Touch_SecondTouchPosition;
=======
<<<<<<< HEAD
        public InputAction @SecondTouchPress => m_Wrapper.m_Touch_SecondTouchPress;
        public InputAction @SecondTouchPosition => m_Wrapper.m_Touch_SecondTouchPosition;
=======
        public InputAction @TouchHold => m_Wrapper.m_Touch_TouchHold;
>>>>>>> fa4041157eea150cbc489a2dc63667e7be1886e9
>>>>>>> Stashed changes
        public InputActionMap Get() { return m_Wrapper.m_Touch; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(TouchActions set) { return set.Get(); }
        public void AddCallbacks(ITouchActions instance)
        {
            if (instance == null || m_Wrapper.m_TouchActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_TouchActionsCallbackInterfaces.Add(instance);
            @TouchInput.started += instance.OnTouchInput;
            @TouchInput.performed += instance.OnTouchInput;
            @TouchInput.canceled += instance.OnTouchInput;
            @TouchPress.started += instance.OnTouchPress;
            @TouchPress.performed += instance.OnTouchPress;
            @TouchPress.canceled += instance.OnTouchPress;
            @TouchDelta.started += instance.OnTouchDelta;
            @TouchDelta.performed += instance.OnTouchDelta;
            @TouchDelta.canceled += instance.OnTouchDelta;
            @TouchPosition.started += instance.OnTouchPosition;
            @TouchPosition.performed += instance.OnTouchPosition;
            @TouchPosition.canceled += instance.OnTouchPosition;
<<<<<<< Updated upstream
=======
<<<<<<< HEAD
>>>>>>> Stashed changes
            @SecondTouchPress.started += instance.OnSecondTouchPress;
            @SecondTouchPress.performed += instance.OnSecondTouchPress;
            @SecondTouchPress.canceled += instance.OnSecondTouchPress;
            @SecondTouchPosition.started += instance.OnSecondTouchPosition;
            @SecondTouchPosition.performed += instance.OnSecondTouchPosition;
            @SecondTouchPosition.canceled += instance.OnSecondTouchPosition;
<<<<<<< Updated upstream
=======
=======
            @TouchHold.started += instance.OnTouchHold;
            @TouchHold.performed += instance.OnTouchHold;
            @TouchHold.canceled += instance.OnTouchHold;
>>>>>>> fa4041157eea150cbc489a2dc63667e7be1886e9
>>>>>>> Stashed changes
        }

        private void UnregisterCallbacks(ITouchActions instance)
        {
            @TouchInput.started -= instance.OnTouchInput;
            @TouchInput.performed -= instance.OnTouchInput;
            @TouchInput.canceled -= instance.OnTouchInput;
            @TouchPress.started -= instance.OnTouchPress;
            @TouchPress.performed -= instance.OnTouchPress;
            @TouchPress.canceled -= instance.OnTouchPress;
            @TouchDelta.started -= instance.OnTouchDelta;
            @TouchDelta.performed -= instance.OnTouchDelta;
            @TouchDelta.canceled -= instance.OnTouchDelta;
            @TouchPosition.started -= instance.OnTouchPosition;
            @TouchPosition.performed -= instance.OnTouchPosition;
            @TouchPosition.canceled -= instance.OnTouchPosition;
<<<<<<< Updated upstream
=======
<<<<<<< HEAD
>>>>>>> Stashed changes
            @SecondTouchPress.started -= instance.OnSecondTouchPress;
            @SecondTouchPress.performed -= instance.OnSecondTouchPress;
            @SecondTouchPress.canceled -= instance.OnSecondTouchPress;
            @SecondTouchPosition.started -= instance.OnSecondTouchPosition;
            @SecondTouchPosition.performed -= instance.OnSecondTouchPosition;
            @SecondTouchPosition.canceled -= instance.OnSecondTouchPosition;
<<<<<<< Updated upstream
=======
=======
            @TouchHold.started -= instance.OnTouchHold;
            @TouchHold.performed -= instance.OnTouchHold;
            @TouchHold.canceled -= instance.OnTouchHold;
>>>>>>> fa4041157eea150cbc489a2dc63667e7be1886e9
>>>>>>> Stashed changes
        }

        public void RemoveCallbacks(ITouchActions instance)
        {
            if (m_Wrapper.m_TouchActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ITouchActions instance)
        {
            foreach (var item in m_Wrapper.m_TouchActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_TouchActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public TouchActions @Touch => new TouchActions(this);
    public interface ITouchActions
    {
        void OnTouchInput(InputAction.CallbackContext context);
        void OnTouchPress(InputAction.CallbackContext context);
        void OnTouchDelta(InputAction.CallbackContext context);
        void OnTouchPosition(InputAction.CallbackContext context);
<<<<<<< Updated upstream
        void OnSecondTouchPress(InputAction.CallbackContext context);
        void OnSecondTouchPosition(InputAction.CallbackContext context);
=======
<<<<<<< HEAD
        void OnSecondTouchPress(InputAction.CallbackContext context);
        void OnSecondTouchPosition(InputAction.CallbackContext context);
=======
        void OnTouchHold(InputAction.CallbackContext context);
>>>>>>> fa4041157eea150cbc489a2dc63667e7be1886e9
>>>>>>> Stashed changes
    }
}
